Index: kernel-rockchip/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c
===================================================================
--- kernel-rockchip.orig/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c
+++ kernel-rockchip/drivers/gpu/drm/rockchip/rockchip_drm_vop2.c
@@ -10686,27 +10686,31 @@ static int vop2_plane_init(struct vop2 *
 	return 0;
 }
 
-static struct drm_plane *vop2_cursor_plane_init(struct vop2_video_port *vp)
+static struct drm_plane *vop2_cursor_plane_init(struct vop2_video_port *vp,
+						unsigned long possible_crtcs)
 {
 	struct vop2 *vop2 = vp->vop2;
 	struct drm_plane *cursor = NULL;
 	struct vop2_win *win;
-	unsigned long possible_crtcs = 0;
 
 	win = vop2_find_win_by_phys_id(vop2, vp->cursor_win_id);
 	if (win) {
-		if (vop2->disable_win_move) {
-			const struct vop2_data *vop2_data = vop2->data;
-			struct drm_crtc *crtc = vop2_find_crtc_by_plane_mask(vop2, win->phys_id);
+		if (possible_crtcs == 0) {
+			if (vop2->disable_win_move) {
+				const struct vop2_data *vop2_data = vop2->data;
+				struct drm_crtc *crtc = vop2_find_crtc_by_plane_mask(vop2, win->phys_id);
+
+				if (crtc)
+					possible_crtcs = drm_crtc_mask(crtc);
+				else
+					possible_crtcs = (1 << vop2_data->nr_vps) - 1;
+			}
 
-			if (crtc)
-				possible_crtcs = drm_crtc_mask(crtc);
-			else
-				possible_crtcs = (1 << vop2_data->nr_vps) - 1;
+			if (win->possible_crtcs)
+				possible_crtcs = win->possible_crtcs;
+			win->type = DRM_PLANE_TYPE_CURSOR;
 		}
 
-		if (win->possible_crtcs)
-			possible_crtcs = win->possible_crtcs;
 		win->type = DRM_PLANE_TYPE_CURSOR;
 		win->zpos = vop2->registered_num_wins - 1;
 		if (!vop2_plane_init(vop2, win, possible_crtcs))
@@ -11131,7 +11135,9 @@ static int vop2_create_crtc(struct vop2
 		}
 
 		if (vp->cursor_win_id >= 0) {
-			cursor = vop2_cursor_plane_init(vp);
+			if (win->possible_crtcs)
+				possible_crtcs = win->possible_crtcs;
+			cursor = vop2_cursor_plane_init(vp, possible_crtcs);
 			if (!cursor)
 				DRM_WARN("failed to init cursor plane for vp%d\n", vp->id);
 			else
